#!/usr/bin/env python3

import signal
import sys
import fn
from regex import compile , search

# Directories / files to skip (these are regexes)

SKIP_DIRS = [
    compile('/External/'),
    compile('/Samples/'),
    compile('/NuGet/'),
    # compile('/Setup/'),
    compile('/i18n/'),
    compile('/li8n/'),
    compile('/node_modules/'),
    compile('/packages/'),
    compile('(?i)/test/'),
    compile('/third_party/'),
    compile('/vendor/'),
    compile(r'/\.svn/'),
    compile(r'/\.git/'),
    compile('example'),
]

SKIP_EXTS = [
    compile(r'\.DS_Store$'),
    compile(r'\.css$'),
    compile(r'\.deps\.json$'),
    compile(r'\.dll$'),
    compile(r'\.eot$'),
    compile(r'\.exe$'),
    compile(r'\.gif$'),
    compile(r'\.ico$'),
    compile(r'\.jar$'),
    compile(r'\.jpg$'),
    compile(r'\.min\.js$'),
    compile(r'\.mov$'),
    compile(r'\.mp4$'),
    compile(r'\.png$'),
    compile(r'\.svg$'),
    compile(r'\.tif$'),
    compile(r'\.tiff$'),
    compile(r'\.ttf$'),
    compile(r'\.woff$'),
    compile(r'\.zip$'),
    compile(r'salt\.7$'),
]

#  files by mime type:
#  find . -type f -exec file --mime-type "{}" \; | awk '{ print $2 ":" $1}'

CFG_FILES = ['.cfg', '.conf', '.config', '.yaml', '.ini', '.xml', '.json', '.txt']
CS_FILES = ['.cs']
C_FILES = ['.c', '.h', '.cpp', '.cxx', '.cc', '.hpp']
DOTNET_FILES = ['.config', '.cs', '.vb', '.vbs', '.xml']
GO_FILES = ['.go']
HTM_FILES = ['.htm', '.html']
JAVA_FILES = ['.java', '.jsp']
JS_FILES = ['.js']
PHP_FILES = ['.php', '.php3', '.php4', '.php5', '.phtml', '.inc', '.phpt']
PL_FILES = ['.pl', '.pm']
PY_FILES = ['.py']
RUBY_FILES = ['.rb']

APPLE_FILES = C_FILES + ['.swift', '.m', '.plist']

EXTRA_CODE_FILES = ['.ps1', '.pubxml', 'dockerfile']

ALL_CODE_FILES = CFG_FILES + C_FILES + DOTNET_FILES + EXTRA_CODE_FILES + GO_FILES + JAVA_FILES + JS_FILES + PHP_FILES + PL_FILES + PY_FILES + RUBY_FILES

DF_FILES = [
    'df_c',
    'df_cs',
    'df_java',
    'df_php',
    'df_py',
    'df_ruby']

GLOBAL_CHECKS = [
    ('basic_start_time', fn.basic_get_time, ''),
    ('basic_path', fn.basic_path, ''),
    ('tool_extensions', fn.global_run_tool, r"find ./ -type f | grep -E '.*\.[a-zA-Z0-9]*$' | sed -e 's/.*\(\.[a-zA-Z0-9]*\)$/\1/' | sort | uniq -c | sort -n >> '{out_fname}' 2>/dev/null & "),
    ('tool_cloc', fn.global_run_tool, r"cloc --progress-rate=0 . >> '{out_fname}' 2>/dev/null &"),
    ('tool_clamav', fn.global_run_tool, r"clamscan -r . >> '{out_fname}' 2>/dev/null &"),
    ('tool_git_repos', fn.global_run_tool, r"find `pwd` -name .git >> '{out_fname}' 2>/dev/null &"),
    ('tool_dot_files', fn.global_run_tool, r"find `pwd` -name '.*' >> '{out_fname}' 2>/dev/null &"),
    ('tool_bandit', fn.global_run_tool, r"bandit --ignore-nosec -r . --format custom --msg-template '{{abspath}}:{{line}}: {{test_id}}[bandit]: {{severity}}: {{msg}}' >> '{out_fname}' 2>/dev/null &"),
    ('tool_nsp', fn.global_run_tool, 'find . -name package.json | while read i; do dirname $i; done | while read j; do echo PROJECT: $j; nsp check $j --reporter summary; done  >> "{out_fname}" 2>/dev/null &'),
    ('tool_eslint', fn.global_run_tool, 'eslint . >> "{out_fname}" 2>/dev/null &'),
]

GLOBAL_POST_CHECKS = [
    ('sort_df_sources', fn.sort_df_sources_and_sinks, ''),
    ('gen_df_bugs', fn.gen_df_bugs, ''),
    ('basic_end_time', fn.basic_get_time, ''),
    # add dataflow searches here
]

# search for regex, call fn passing fname, out_fname and arg
FILE_CHECKS = [
    ('exe_scan', compile(r'''\.exe$'''), fn.file_scan_exe, None),
    ('minor_file_h5', compile(r'''\.h5$'''), fn.file_exists, None),
    ('minor_file_hd5', compile(r'''\.hd5$'''), fn.file_exists, None),
    ('minor_file_hdf5', compile(r'''\.hdf5$'''), fn.file_exists, None),
    ('file_pkl', compile(r'''\.pkl$'''), fn.file_exists, None),
    ('minor_file_pt', compile(r'''\.pt$'''), fn.file_exists, None),
    ('file_secret', compile(r'''secret'''), fn.file_exists, None),
    ('tool_shellcheck', compile(r'''\.sh$'''), fn.file_scan_shell, None),
    ('minor_py_requirements', compile(r'''requirements.txt'''), fn.file_run_tool, 'echo "{fname}" >> "{out_fname}"; safety check --full-report -r "{fname}" >> "{out_fname}"'),
]

HASH_EXCLUSIONS = [
    compile('0000000000000000'),
    compile('0123456789'),
    compile('EXAMPLE'),
    compile('data:image'),
    compile('deadbeef'),
    compile('integrity'),
    compile('md5sum'),
    compile('reference'),
    compile('shasum'),
    compile(r'''\?rev='''),
]

CS_EXCLUSIONS = [compile(r'''^\s*//'''), ]
GO_EXCLUSIONS = [compile(r'''^\s*//'''), ]

LINE_CUSTOM_CHECKS = [
]

LINE_REGEX_CHECKS = [
    ('apple_keychain_item', compile(r'''KeychainItem.{0,200}$'''), APPLE_FILES),
    ('apple_ksecvaluedata', compile(r'''kSecValueData.{0,200}$'''), APPLE_FILES),
    ('apple_secitemupdate', compile(r'''SecItemUpdate.{0,200}$'''), APPLE_FILES),
    ('applescript_shell', compile(r'''do\s+shell\s+script.{0,199}$''')),
    ('asan_reference', compile(r'''\W(asan|address_sanitizer|no_sanitize_address)\W.{0,200}$''')),
    ('auth_basic', compile(r'''Authorization.{0,20}Basic\s\w+.{0,200}$''')),
    ('boost_process', compile(r'''boost::process::child.{0,200}$''')),
    ('c_arch_recv', compile(r'''(recv|Recv|recvfrom|recvmsg|RecvFrom)\('''), C_FILES),
    ('c_cpy_sizeof_src1', compile(r'''(strlcpy|strlcat|strncpy|strncat|strcpy_s|strcat_s)\s*\(\s*\s*[^,]+\s*,\s*([^,]+)\s*,\s*(strlen|sizeof)\s*\(\s*\2\s*\)'''), C_FILES),
    ('c_cpy_sizeof_src2', compile(r'''(strlcpy|strlcat|strncpy|strncat|strcpy_s|strcat_s)\s*\(\s*\s*[^,]+\s*,\s*([^,]+)\s*,\s*(strlen|sizeof)\s*\2\W'''), C_FILES),
    ('c_cpy_sizeof_src3', compile(r'''(strlcpy|strlcat|strncpy|strncat|strcpy_s|strcat_s)\s*\(\s*(\([^\)]*\))\s*[^,]+\s*,\s*([^,]+)\s*,\s*(strlen|sizeof)\s*(\()?\s*\3\s*(\))?'''), C_FILES),
    ('c_cpy_sizeof_src4', compile(r'''\W(strlcpy|strlcat|strncpy|strncat|strcpy_s|strcat_s)\s*\([^,]+,\s*([^,]+)\s*,[^,;}]+\W\2\W'''), C_FILES),
    ('c_cpy_sizeof_src5', compile(r'''\W(strlcpy|strlcat|strncpy|strncat|strcpy_s|strcat_s)\s*\([^,]+,\s*([^,]+)\s*,[^,;}]+\2'''), C_FILES),
    ('c_fmt_off_by_one', compile(r'''sprintf.*\%\.\*s.{0,99}sizeof.{0,99}$'''), C_FILES),
    ('c_fscanf', compile(r'''fscanf\s*\(.*\"[^\"]*%s.{0,99}$'''), C_FILES),
    ('c_gets', compile(r'''\Wgets\s*\(.{0,99}$'''), C_FILES),
    ('c_insecure_loadlib', compile(r'''\W(LoadLibrary|LoadLibraryA|LoadLibraryW|LoadLibraryEx|LoadLibraryExA|LoadLibraryExW)\([^/\n]{0,199}$'''), C_FILES),
    ('c_malloc_wraparound', compile(r'''k?malloc\(.*([+*]|-[^>])'''), C_FILES),
    ('c_memcpy_wraparound', compile(r'''memcpy\(.*([+*]|-[^>])'''), C_FILES),
    ('c_memset_insecure_zeroing', compile(r'''memset\s*\([^,]*,\s*0\s*.{0,99}$'''), C_FILES),
    ('c_memset_zero_bytes', compile(r'''memset\s*\([^,]*,[^,]*,\s*0\s*\).{0,99}$'''), C_FILES),
    ('c_non_const_fmt_p1', compile(r'''\W(printf|vprintf)\s*\([^",]+,[^",]+,'''), C_FILES),
    ('c_non_const_fmt_p2', compile(r'''\W(f|s|as|d|vf|vs|vas|vd)printf\s*\([^",]+,[^",]+,'''), C_FILES),
    ('c_non_const_fmt_p3', compile(r'''\W(sn|vsn)printf\s*\([^",]+,[^",]+,[^",]+,'''), C_FILES),
    ('c_ntoh_length_wrap', compile(r'''(length|size).*ntoh.*(-|\+|\*)'''), C_FILES),
    ('c_potential_fmt_off_by_one', compile(r'''sprintf.*\%\.\*s.{0,200}$'''), C_FILES),
    ('c_scanf', compile(r'''(f|s|vf|v|vs)\?scanf\s*\(.{0,99}$'''), C_FILES),
    ('c_scanf2', compile(r'''scanf\s*\(.*\"[^\"]*%s.{0,99}$'''), C_FILES),
    ('c_scanf_s', compile(r'''(f|s|vf|v|vs)\?scanf\s*\(.*\"[^\"]*%s.{0,99}$'''), C_FILES),
    ('c_snprintf_retval_use', compile(r'''\+=\s*v?snprintf.{0,99}$'''), C_FILES),
    ('c_socket', compile(r'''socket\('''), C_FILES),
    ('c_sprintf_ls', compile(r'''sprintf\s*\(.*\"[^\"]*%ls.{0,99}$'''), C_FILES),
    ('c_sprintf_path', compile(r'''s.?printf\(.{0,99}(/%s|%s/).{0,99}$'''), C_FILES),
    ('c_sprintf_s', compile(r'''sprintf\s*\(.*\"[^\"]*%s.{0,99}$'''), C_FILES),
    ('c_sscanf_s', compile(r'''sscanf\s*\(.*\"[^\"]*%s.{0,99}$'''), C_FILES),
    ('c_trusted_length_in_input', compile(r'''len\s*=.*\*.{0,199}$'''), C_FILES),
    ('c_warning_supress', compile(r'''#pragma\s+warning\s*\(\s*suppress'''), C_FILES),
    ('cfg_haproxy_plaintext_password', compile(r'''insecure-password.{0,99}$'''), CFG_FILES),
    ('chpasswd', compile(r'''chpasswd.{0,200}$''')),
    ('cmdi_Popen2', compile(r'''\WPopen\([^)].{0,99}$''')),
    ('cmdi_c_process_exec', compile(r'''exec[lv][epP]*\(.{0,99}$''')),
    ('cmdi_check_output', compile(r'''\Wcheck_output\([^)].{0,99}$''')),
    ('cmdi_child_process', compile(r'''child_process.{0,99}$''')),
    ('cmdi_command', compile(r'''["\'](chmod|chown|cmd.exe|copy|cp|git|gzip|mkdir|mktemp|rm|ssh|tar|unzip|/bin/sh|gunzip|del|cat|sed)\s.{0,199}$''')),
    ('cmdi_createProcess', compile(r'''\WCreateProcess\W.{0,99}$''')),
    ('cmdi_dotnet_process', compile(r'''\.StartInfo.{0,99}$'''), CS_FILES, CS_EXCLUSIONS),
    ('cmdi_exe_exec', compile(r'''\"\w+\.exe\".{0,99}$''')),
    ('cmdi_exec', compile(r'''\W\.exec.{0,99}$''')),
    ('cmdi_exec2', compile(r'''^.{0,99}\Wexec\(.{0,99}$''')),
    ('cmdi_lua_exec', compile(r'''os\.execute.{0,99}$''')),
    ('cmdi_options', compile(r'''^.{0,199}(("[^\n"$-]*\s--[^-])|("--\w)).{0,199}$''')),
    ('cmdi_perl_interp', compile(r'''\Wsystem\("[^"]*\$.{0,99}$'''), PL_FILES),
    ('cmdi_perl_interp2', compile(r'''\Wsystem\("[^"]*@.{0,99}$'''), PL_FILES),
    ('cmdi_popen', compile(r'''popen\([^)].{0,99}$''')),
    ('cmdi_process_new', compile(r'''new\sProcess\(.{0,99}$''')),
    ('cmdi_scala_cmd_bang', compile(r'''\.![^!].{0,99}$''')),
    ('cmdi_scala_cmd_bangbang', compile(r'''\.!!.{0,99}$''')),
    ('cmdi_scala_processbuilder', compile(r'''ProcessBuilder\s*\(.{0,99}$''')),
    ('cmdi_shell_exec', compile(r'''shell_exec.{0,99}$''')),
    ('cmdi_shellexec', compile(r'''ShellExecute.{0,199}$''')),
    ('cmdi_spawn', compile(r'''^.{0,99}\Wspawn\(.{0,99}$''')),
    ('cmdi_system_noempty', compile(r'''\Wsystem\([^)].{0,99}$''')),
    ('cmdi_win_proc_start', compile(r'''ProcessStartInfo.{0,99}$''')),
    ('comment_credit_card', compile(r'''credit.card.{0,99}$''')),
    ('comment_cvv', compile(r'''\Wcvv\W.{0,99}$''')),
    ('comment_inflate_version', compile(r'''inflate.*[0123456789.]{3,}.*Copyright.*Mark.*Adler.{0,99}$''')),
    ('comment_luck', compile(r'''\Wlucky*\W''')),
    ('comment_obscenities', compile(r'''\W(asshole|bastard|brainfuck|cock|crap|crappy|cunt|dick|flippin|flipping|fuck|fucking|motherfucker|screwed|shit|pussy|tits)\W.{0,99}$''')),
    ('comment_rubocop_disable', compile(r'''rubocop:disable.{0,99}$''')),
    ('comment_rubocop_disable_security', compile(r'''rubocop:disable\s+Security.{0,99}$'''), RUBY_FILES),
    ('comment_security_concern', compile(r'''security (concern|problem|vulnerability|issue).{0,199}$''')),
    ('comment_static_analysis_tool', compile(r'''(?i)(NOLINT|\Wnosem\W|noinspection|safesql|coverity|fortify|veracode|Prefast|DevSkim|checkmarx|\Wnosec\W|\WNOSONAR\W|@SuppressWarnings|\Wnoqa\W).{0,99}$''')),
    ('comment_todos', compile(r'''\W(TODO|HACK|FIXME|XXX|BROKEN)\W.{0,99}$''')),
    ('const_amazon_s3_url', compile(r'''s3://[^\.].{3,199}$''')),
    ('const_amazon_s3_url2', compile(r'''https://s3-.{3,299}$''')),
    ('const_amazon_secret_key', compile(r'''["\'][A-Za-z0-9/+=]{40}["\'].{0,99}$'''), None, [compile('reference')]),
    ('const_aws_hosts', compile(r'''\S{10,199}\.amazonaws\.com.{0,199}$''')),
    ('cors_allow_all', compile(r'''Access-Control-Allow-Origin.*"\*".{0,99}$''')),
    ('createEvent', compile(r'''CreateEvent.{0,99}$''')),
    ('cred_CAPS_secret', compile(r'''[A-Z0-9]{1..99}_SECRET[A-Z0-9_]*.{0,99}$''')),
    ('cred_access_token', compile(r'''^.{0,299}x-access-token.{0,299}$''')),
    ('cred_access_token', compile(r'''^\s*access_token:\s*[a-zA-Z0-9\.\-\_\!\?\#\&\*\:\;\@\(\)\<\>\%]{18,}\s*$''')),
    ('cred_api_key', compile(r'''^[^=\n]{0,199}API_KEY[^\n]{7,199}$''')),
    ('cred_api_token', compile(r'''api_token=[0-9a-f]{40}.{0,200}$''')),
    ('cred_auth', compile(r'''"AUTH"[,\s]+"[^\n]{5,99}".{0,99}$''')),
    ('cred_auth_header', compile(r'''Authorization:\s*\w+\s*[A-Za-z0-9.+=_@!^&*()-?]{8,200}\W''')),
    ('cred_aws_access_id2', compile(r'''(^|[^A-Z0-9])(AKIA|ASIA)[A-Z0-9]{16}($|[^A-Z0-9]).{0,99}$''')),
    ('cred_aws_creds', compile(r'''(AWS_ACCESS_KEY_ID|AWS_SECRET_ACCESS_KEY|AWS_DEFAULT_REGION).{20,199}$''')),
    ('cred_aws_secret_key', compile(r'''(AWSSecretKey|AwsDevSecretKey|SecretKey|ClientSecret|BasicAWSCredentials|clientSecret|AWS_SECRET_KEY|AgentToken).{0,199}$''')),
    ('cred_azure_client_id', compile(r'''client_id[^\n]+[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}.{0,199}$''')),
    ('cred_azure_client_secret', compile(r'''client_secret[^\n]+\W[a-zA-Z0-9\+\-\_\/]{32}\W.{0,199}$''')),
    ('cred_azure_storage_key', compile(r'''[Aa]zure[Ss]torage[Kk]ey.*[Aa]ccount[Kk]ey.{0,499}$''')),
    ('cred_azure_tenant_id', compile(r'''tenant_id[^\n]+[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}.{0,199}$''')),
    ('cred_base64', compile(r'''base64.{0,99}$''')),
    ('cred_bcrypt_hash', compile(r'''<bcrypt-hash>.{0,199}$''')),
    ('cred_buildfile', compile(r'''<Password>.{5,200}</Password>''')),
    ('cred_config_key', compile(r'''add\s+key="\w*key\w*".{1,99}$'''), CFG_FILES),
    ('cred_config_password', compile(r'''add\s+key="\w*password\w*".{1,99}$'''), CFG_FILES),
    ('cred_config_secret', compile(r'''add\s+key="\w*secret\w*".{1,99}$'''), CFG_FILES),
    ('cred_connectionString', compile(r'''ConnectionString\s*=.{0,99}$''')),
    ('cred_connectionstring2', compile(r'''(DSN|DATASOURCE|UID|USER\sID|USER)=[^;].{1,99}(PASSWORD|PWD)=[^;].{1,99}$''')),
    ('cred_curl_auth', compile(r'''^.{0,200}curl[^\n]{0,200}-u[^\n]{0,200}:[^\n]{0,200}$''')),
    ('cred_dot_secret_key', compile(r'''\.SecretKey.{0,99}$''')),
    ('cred_dotnet_password', compile(r'''^.{0,200}assword\s*=\s*"[^"]+".{0,200}$'''), CS_FILES),
    ('cred_env_password', compile(r'''^.{0,200}ENV\s*\w*PASS\w*\s*"[^"]+".{0,200}$''')),
    ('cred_facebook', compile(r'''(?i)facebook[^=]*=[^=]*[0-9a-f]{32}.{0,99}$''')),
    ('cred_github', compile(r'''(?i)github[^=]*=[^=]*[0-9a-zA-Z]{35,40}.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_github_token', compile(r'''GITHUB_TOKEN.{0,299}$''')),
    ('cred_google_clientid', compile(r'''clientId.{30,80}googleusercontent.com.{0,299}$''')),
    ('cred_hash_1', compile(r'''\$1\$\w{4,99}$\w{4,99}.{0,99}$''')),
    ('cred_hash_10', compile(r'''\$krb5tgs\$23\$.{0,99}$''')),
    ('cred_hash_11', compile(r'''\$md5\$.*\$.{0,99}$''')),
    ('cred_hash_12', compile(r'''\$ml\$\d+\$.{0,99}$''')),
    ('cred_hash_13', compile(r'''\$office\$\*2007\*.{0,99}$''')),
    ('cred_hash_14', compile(r'''\$office\$\*2010\*.{0,99}$''')),
    ('cred_hash_15', compile(r'''\$office\$\*2013\*.{0,99}$''')),
    ('cred_hash_16', compile(r'''\$oldoffice\$1\*\d+.{0,99}$''')),
    ('cred_hash_17', compile(r'''\$S\$.{0,99}$''')),
    ('cred_hash_19', compile(r'''\W[a-f0-9]{128}:\w+\W.{0,99}$''')),
    ('cred_hash_2', compile(r'''\$2a\$05\$.{0,99}$''')),
    ('cred_hash_21', compile(r'''\W[a-f0-9]{32}:\w+\W.{0,99}$''')),
    ('cred_hash_23', compile(r'''\W[a-f0-9]{40}:\w+\W.{0,99}$''')),
    ('cred_hash_25', compile(r'''\W[a-f0-9]{64}:\w+\W.{0,99}$''')),
    ('cred_hash_26', compile(r'''\W\w+\$[a-f0-9]{16}\W.{0,99}$''')),
    ('cred_hash_27', compile(r'''\W\w+:\d+:[a-f0-9]{32}:[a-f0-9]{32}\W.{0,99}$''')),
    ('cred_hash_28', compile(r'''u4-netntlm::.{0,99}$''')),
    ('cred_hash_29', compile(r'''\{ssha1\}06\$.*\$.{0,99}$''')),
    ('cred_hash_2x', compile(r'''\$2\w\$\d+\$[A-Za-z0-9./]{20,}.{0,99}$''')),
    ('cred_hash_3', compile(r'''\$5\$\w{4,99}$\w{4,99}.{0,99}$''')),
    ('cred_hash_30', compile(r'''\{ssha256\}06\$.{0,199}$''')),
    ('cred_hash_31', compile(r'''\{SSHA512\}.{0,199}$''')),
    ('cred_hash_32', compile(r'''\{ssha512\}06\$.{0,199}$''')),
    ('cred_hash_33', compile(r'''\{x-issha,\s*1024\}.{0,199}$''')),
    ('cred_hash_4', compile(r'''\$6\$\w{4,99}$\w{4,99}.{0,99}$''')),
    ('cred_hash_5', compile(r'''\$8\$\w{4,99}$\w{4,99}.{0,99}$''')),
    ('cred_hash_6', compile(r'''\$9\$\w{4,99}$\w{4,99}.{0,99}$''')),
    ('cred_hash_7', compile(r'''\$apr1\$\w{4,99}$\w{4,99}.{0,99}$''')),
    ('cred_hash_8', compile(r'''\$DCC2\$\d+#.*#.{0,99}$''')),
    ('cred_hash_9', compile(r'''\$keepass\$\*\d+\*\d+\*\d+\*.{0,99}$''')),
    ('cred_hash_AIX', compile(r'''\{ssha256\}[0-9a-zA-Z\$\+\/\.]{20,}\W.{0,99}$''')),
    ('cred_hash_AIX', compile(r'''\{ssha512\}[0-9a-zA-Z\$\.\-\+\/]{20,}\W.{0,99}$''')),
    ('cred_hash_Android_FDE_SamsungDEK', compile(r'''\W[0-9a-fA-F]{160}\W.{0,99}$''')),
    ('cred_hash_ArubaOS', compile(r'''\W[0-9a-fA-F]{50}\W.{0,99}$''')),
    ('cred_hash_Atlassian', compile(r'''\{PKCS5S2\}[0-9a-zA-Z]{64}\W.{0,99}$''')),
    ('cred_hash_Cisco_IOS_type_4', compile(r'''\W[0-9a-zA-Z]{43}\W.{0,99}$''')),
    ('cred_hash_Cisco_PIX_MD5', compile(r'''password\s+[0-9a-zA-Z\+\.\/]{16}\s+encrypted.{0,99}$''')),
    ('cred_hash_ColdFusion', compile(r'''\W[0-9a-fA-F]{64}:[0-9a-fA-F]{64}\W.{0,99}$''')),
    ('cred_hash_DES_Oracle', compile(r'''\W[0-9a-fA-F]{16}:[0-9a-fA-F]{10}\W.{0,99}$''')),
    ('cred_hash_DomainCachedCredentials', compile(r'''\W[0-9a-fA-F]{32}:[0-9a-fA-F]{13}\W.{0,99}$''')),
    ('cred_hash_EPi', compile(r'''0x[0-9a-zA-Z]{60}\W.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_FileZillaServer_0.9.55', compile(r'''\W[0-9a-fA-F]{128}:[0-9a-fA-F]{64}\W.{0,99}$''')),
    ('cred_hash_FortiGate', compile(r'''\W[0-9a-zA-Z\+\.\/]{46}=\W.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_HMAC_SHA256', compile(r'''\W[0-9a-fA-F]{64}:[0-9a-fA-F]{8}\W.{0,99}$''')),
    ('cred_hash_IPB2', compile(r'''\W[0-9a-fA-F]{32}:[0-9a-fA-F]{2,20}\W.{0,99}$''')),
    ('cred_hash_IPMI2_RAKP_HMAC_SHA1', compile(r'''\W[0-9a-fA-F]{130}:[0-9a-fA-F]{40}\W.{0,99}$''')),
    ('cred_hash_Joomla', compile(r'''\W[0-9a-fA-F]{32}:[0-9a-fA-F]{32}\W.{0,99}$''')),
    ('cred_hash_MSSQL_2000', compile(r'''0x01[0-9a-zA-Z]{90}\W.{0,99}$''')),
    ('cred_hash_MSSQL_2005', compile(r'''0x01[0-9a-zA-Z]{50}\W.{0,99}$''')),
    ('cred_hash_MSSQL_2012_2014', compile(r'''0x02[0-9a-zA-Z]{138}\W.{0,99}$''')),
    ('cred_hash_MySQL323', compile(r'''\W[0-9a-fA-F]{16}\W.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_NetNTLMv1', compile(r'''\W[0-9a-zA-Z]{48}:[0-9a-zA-Z]{16}\W.{0,99}$''')),
    ('cred_hash_OSX', compile(r'''\W[0-9a-fA-F]{48}\W.{0,99}$''')),
    ('cred_hash_OSXv10.7', compile(r'''\W[0-9a-fA-F]{136}\W.{0,99}$''')),
    ('cred_hash_OpenCart', compile(r'''\W[0-9a-fA-F]{40}:[0-9a-fA-F]{9}\W.{0,99}$''')),
    ('cred_hash_Oracle11', compile(r'''\W[0-9a-fA-F]{40}:[0-9a-fA-F]{20}\W.{0,99}$''')),
    ('cred_hash_Oracle12', compile(r'''\W[0-9a-fA-F]{160}\W.{0,99}$''')),
    ('cred_hash_PeopleSoft', compile(r'''\W[0-9a-fA-F]{40}:[0-9a-fA-F]{126}\W.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_PeopleSoft2', compile(r'''\W[0-9a-zA-Z]{27}=.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_PostgreSQL', compile(r'''\W[0-9a-zA-Z]{32}:[0-9a-zA-Z]{2,20}\W.{0,99}$''')),
    ('cred_hash_PunBB', compile(r'''\W[0-9a-fA-F]{40}:[0-9a-fA-F]{12}\W.{0,99}$''')),
    ('cred_hash_Radmin2', compile(r'''\W[0-9a-fA-F]{32}[^:0-9a-fA-F].{0,99}$''')),
    ('cred_hash_Redmine', compile(r'''\W[0-9a-fA-F]{40}:[0-9a-fA-F]{32}\W.{0,99}$''')),
    ('cred_hash_SHA_224', compile(r'''\W[0-9a-fA-F]{56}\W.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_SHA_256', compile(r'''\W[0-9a-fA-F]{64}\W.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_SHA_384', compile(r'''\W[0-9a-fA-F]{96}\W.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_SHA_512', compile(r'''\W[0-9a-fA-F]{128}\W.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_SSHA_256', compile(r'''\{SSHA256\}[0-9a-zA-Z\+\/]{47}\W.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_SSHA_512', compile(r'''\{SSHA512\}[0-9a-zA-Z\+]{95}\W.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_SamsungAndroidPassword', compile(r'''\W[0-9a-fA-F]{40}:[0-9a-fA-F]{16}\W.{0,99}$''')),
    ('cred_hash_SipHash', compile(r'''\W[0-9a-fA-F]{16}:[0-9a-fA-F]{32}\W.{0,99}$''')),
    ('cred_hash_SybaseASE', compile(r'''0x[0-9a-zA-Z]{84}\W.{0,99}$''')),
    ('cred_hash_WindowsPhone8', compile(r'''\W[0-9a-fA-F]{64}:[0-9a-fA-F]{256}\W.{0,99}$''')),
    ('cred_hash_hMailServer', compile(r'''\W[0-9a-fA-F]{70}\W.{0,99}$''')),
    ('cred_hash_md4_md5', compile(r'''\W[0-9a-fA-F]{32}\W.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_md5', compile(r'''md5\$.{0,99}\$[a-zA-Z0-9].{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_salted_md5', compile(r'''\W[0-9a-fA-F]{32}:[0-9a-fA-F]{2,20}\W.{0,99}$''')),
    ('cred_hash_salted_sha1', compile(r'''\W[0-9a-fA-F]{40}:[0-9a-fA-F]{2,20}\W.{0,99}$''')),
    ('cred_hash_saltedsha512', compile(r'''\W[0-9a-fA-F]{128}:[0-9a-fA-F]{10}\W.{0,99}$''')),
    ('cred_hash_sha1', compile(r'''\W[0-9a-fA-F]{40}\W.{0,99}$'''), None, HASH_EXCLUSIONS),
    ('cred_hash_vBulletin', compile(r'''\W[0-9a-fA-F]{32}:[0-9a-fA-F]{30}\W.{0,99}$''')),
    ('cred_hex_dblquotes', compile(r'''^.{0,199}"[a-f0-9]{16,}".{0,199}$'''), None, HASH_EXCLUSIONS),
    ('cred_identified_by', compile(r'''IDENTIFIED\s+BY\s+\'[^\n]{0,299}$''')),
    ('cred_in_url', compile(r'''\w+://\w+:\w+@\w+.{0,99}$''')),
    ('cred_jdbc_dbl', compile(r'''"jdbc:\w+://[^"]{0,99}".{0,99}$''')),
    ('cred_jdbc_sgl', compile(r'''\'jdbc:\w+://[^\']{0,99}\'.{0,99}$''')),
    ('cred_key', compile(r'''^\s*key:\s*[a-zA-Z0-9\.\-\_\!\?\#\&\*\:\;\@\(\)\<\>\%]{10,}\s*$''')),
    ('cred_key_equals', compile(r'''^[^=\n]{0,199}KEY[^=\n]{0,30}=\s*[^\n\s]{7,199}\s*$''')),
    ('cred_keys', compile(r'''\-----BEGIN[A-Z\s]*KEY[A-Z\s]*-----''')),
    ('cred_mysql_connect_call', compile(r'''new mysqli\(.{0,99}$''')),
    ('cred_mysql_passwords', compile(r'''\Wmysql\s.{0,99}[^-]-p[^\$\%].{0,99}$''')),
    ('cred_network_credential', compile(r'''\WNetworkCredential\(.{0,399}$''')),
    ('cred_password', compile(r'''^\s*password:\s*[a-zA-Z0-9\.\-\_\!\?\#\&\*\:\;\@\(\)\<\>\%]{10,}\s*$''')),
    ('cred_password01', compile(r'''\s--password\s*=\s*[^\$\%].{0,99}$''')),
    ('cred_password02', compile(r'''password=[^\s";.]*.{0,199}$''')),
    ('cred_password03', compile(r'''password"[^"]*value="[^"]*.{0,199}$''')),
    ('cred_password04', compile(r'''password"[^",\w]{0,50}"[^"]{0,50}".{0,199}$''')),
    ('cred_password05', compile(r'''key=[^\s";.]*.{0,199}$''')),
    ('cred_password_config', compile(r'''^\s*password\s\S{5,99}\s*$''')),
    ('cred_password_equals', compile(r'''^[^=\n]{0,199}PASSWORD[^=\n]{0,30}=\s*[^\n\s]{7,199}\s*$''')),
    ('cred_password_equals', compile(r'''password[^=\n]{0,30}=.{0,199}$''')),
    ('cred_password_equals2', compile(r'''password\s*=\s*".{0,99}$''')),
    ('cred_postgres_pgpass_format', compile(r'''^[.a-zA-Z0-9_-]+(:[.a-zA-Z0-9_-]+){4}$''')),
    ('cred_private_key', compile(r'''privateKey.{0,99}$''')),
    ('cred_public_key', compile(r'''publicKey.{0,99}$''')),
    ('cred_refreshToken', compile(r'''refreshToken.{16,80}$''')),
    ('cred_secret', compile(r'''^\s*secret:\s*[a-zA-Z0-9\.\-\_\!\?\#\&\*\:\;\@\(\)\<\>\%]{18,}\s*$''')),
    ('cred_secret_equals', compile(r'''^[^=\n]{0,199}SECRET[^=\n]{0,30}=\s*[^\n\s]{7,199}\s*$''')),
    ('cred_secretname_equals', compile(r'''(accesskey|secretkey|apisecret|apikey|GSUsername|GSPassword|SteamBuildMachineUsername|SteamBuildMachinePassword|S3BucketName).{0,99}[=:].{0,99}$''')),
    ('cred_signtool_password', compile(r'''signtool.*/p.{0,99}$''')),
    ('cred_slack', compile(r'''xox[baprs]-[^=]*=[^=]*.{0,99}$''')),
    ('cred_stripe_secret_token', compile(r'''(?i)STRIPE[^\n]+(sk)_[0-9a-zA-Z_]{10,64}.{0,99}$''')),
    ('cred_stripe_token', compile(r'''(?i)(sk|pk)_(test|live)_[0-9a-zA-Z]{10,32}.{0,99}$''')),
    ('cred_telegram', compile(r'''(?i)telegram[^=]*=[^=]*[0-9]{1,12}+:[0-9a-zA-Z-]{32,44}.{0,99}$''')),
    ('cred_token_equals', compile(r'''^[^=\n]{0,199}TOKEN[^=\n]{0,30}=\s*[^\n\s]{7,199}\s*$''')),
    ('cred_twitter', compile(r'''(?i)twitter[^=]*=[^=]*[0-9a-zA-Z]{35,44}.{0,99}$''')),
    ('crypto_algorithm_name', compile(r'''\W(AES|DES|SHA|SHA1|SHA2|SHA256|SHA512|blowfish|MD5|IDEA|RSA|DSA|MD4|SHA3|HMAC)\W.{0,99}$''')),
    ('crypto_api_call', compile(r'''\W(CryptAcquireContext|CryptDeriveKey|CryptGenKey|CryptGenRandom)\W.{0,99}$''')),
    ('crypto_b64', compile(r'''AES\.DecryptFromBase64.{0,99}$''')),
    ('crypto_b64_2', compile(r'''AES\.DecryptFromBase64.{0,99}$''')),
    ('crypto_diffie_hellman', compile(r'''[D|d]iffie.*[H|h]ellman.{0,99}$''')),
    ('cve_id', compile(r'''\WCVE-\d\d\d\d-.{0,200}$''')),
    ('define_password', compile(r'''^.{0,99}#define.{0,99}PASSWORD.{0,99}".{0,99}$'''), C_FILES, CS_EXCLUSIONS),
    ('df_c_sinks', compile(r'''^.{0,99}\W(system|strcpy|strcat|memcpy|sprintf)\s*\(.{0,199}$'''), C_FILES),
    ('df_c_sources', compile(r'''^.{0,99}\W(recv|argv|fread|fgets|scanf|fscanf).{0,199}$'''), C_FILES),
    ('df_dotnet_sinks', compile(r'''^.{0,99}\W(GetAsync)\W.{0,199}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('df_dotnet_sinks', compile(r'''^.{0,99}\W(WriteFile|FileSystem|SimpleDB|ExecuteSqlCommand|SqlCommand|ProcessStartInfo|CreateProcess|WriteAllText|HttpClient)\W.{0,199}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('df_dotnet_sinks', compile(r'''^.{0,99}\WLIKE\s*'\%\{\w+}\%'.{0,199}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('df_dotnet_sources', compile(r'''^.{0,99}\W(QueryString|Request|HttpGet|HttpPost|HttpPut|FromBase64String|Parse|Load)\W.{0,199}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('df_dotnet_sources', compile(r'''^.{0,99}\W(string.Format)\W.{0,199}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('df_java_sinks', compile(r'''^.{0,99}\W"\s*\+\s*[^"]{1,199}".{0,199}$'''), JAVA_FILES),
    ('df_java_sinks', compile(r'''^.{0,99}\W(HttpHeaders|URI|setHeader|uploadFile|File|createFile|save)\W.{0,199}$'''), JAVA_FILES),
    ('df_java_sinks', compile(r'''^.{0,99}\W(execute|HttpClient|PostMethod|exec|Runtime|executeMethod|SqlQuery|executeQuery|QueryBuilder)\W.{0,199}$'''), JAVA_FILES),
    ('df_java_sources', compile(r'''^.{0,99}\W(FromBase64String|Parse|Load|JSONObject|InputStreamReader|BufferedReader|readLine|params|Param|RequestMapping)\W.{0,199}$'''), JAVA_FILES),
    ('df_java_sources', compile(r'''^.{0,99}\W(PathVariable|RequestBody|requestBody|RequestHeader|queryString|RequestParam|getParameter|GetMapping)\W.{0,199}$'''), JAVA_FILES),
    ('df_java_sources', compile(r'''^.{0,99}\W(PutMapping|PostMapping)\W.{0,199}$'''), JAVA_FILES),
    ('df_php_sinks', compile(r'''^.{0,99}\W(assert|copy|eval|exec|file|fopen|include|mssql_query|mysqli_query|pcntl_exec|pg_query|popen|require|require_once|shell_exec|system)\s*\(.{0,199}$'''), PHP_FILES),
    ('df_php_sources', compile(r'''^.{0,99}\W(\$_POST|\$_GET|\$_REQUEST|\$_COOKIE|readline|fscanf|fgets|file_get_contents).{0,199}$'''), PHP_FILES),
    ('df_py_sinks', compile(r'''^.{0,99}\W(rename|makedirs|open|write|HTTPAdapter|Request|urlopen|make_response|dumps|redirect|jsonify|chdir|remove)\s*\(.{0,199}$'''), PY_FILES),
    ('df_py_sinks_crit', compile(r'''^.{0,99}\W(system|check_output|execute|subprocess.call|Popen|popen)\s*\(.{0,199}$'''), PY_FILES),
    ('df_py_sources', compile(r'''^.{0,99}\W(loads|load|open|route|request.args|get_json|get|read)\s*\(.{0,199}$'''), PY_FILES),
    ('df_py_sources', compile(r'''^.{0,99}\W(request.form|session|args|environ|\+\W*\w+\W*\+).{0,199}$'''), PY_FILES),
    ('df_ruby_sinks', compile(r'''^.{0,99}\W(IO.binread|IO.binwrite|IO.foreach|JSON.load|JSON.parse|popen|read|write|eval|exec|spawn|syscall|system|eval|constantize|render).{0,199}$'''), RUBY_FILES),
    ('df_ruby_sources', compile(r'''^.{0,99}\W(params|query_parameters|path_parameters|get|post|query_string)\W.{0,199}$'''), RUBY_FILES),
    ('dllimport', compile(r'''dllimport.{0,99}$''')),
    ('dotnet_Rfc2898DeriveBytes', compile(r'''\WRfc2898DeriveBytes.{0,200}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_allow_all', compile(r'''allow.{0,10}users.{0,10}\*.{0,100}$'''), DOTNET_FILES),
    ('dotnet_allow_users', compile(r'''allow.{0,10}users.{0,10}=.{0,100}$''')),
    ('dotnet_allowanonymous', compile(r'''\[AllowAnonymous\].{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_app_paths', compile(r'''location.{0,10}path.{0,10}=.{0,100}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_appendformat', compile(r'''\.AppendFormat.{1,80}\{\d+\}.{0,199}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_binaryformatter_deserial_CA2300', compile(r'''\WBinaryFormatter.{0,200}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_binarywrite', compile(r'''\WBinaryWrite\W.{0,199}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_certvalidation_none', compile(r'''X509CertificateValidationMode\.None.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_cookie', compile(r'''HttpCookie.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_crypto', compile(r'''\WSystem\.Security\.Cryptography\W.{0,199}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_dirBrowse', compile(r'''directoryBrowse.{1,20}enable.{1,20}true.{0,99}$'''), DOTNET_FILES),
    ('dotnet_disablesecurity', compile(r'''DisableSecurity.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_dotnet_interpolation', compile(r'''string\.Format\(.*{.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_dotnet_net', compile(r'''System\.Net.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_dotnet_pipes', compile(r'''System\.IO\.Pipes.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_dotnet_saveas', compile(r'''\.SaveAs\(.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_dotnet_string_format', compile(r'''string\.Format.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_forms_authentication', compile(r'''FormsAuthentication.{0,199}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_insecure_rsa_padding', compile(r'''\.Encrypt\(.{1,99}false.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_method', compile(r'''\[Http(Post|Get|Patch|Put|Delete).{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_pageload', compile(r'''Page_Load.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_replaceQuote', compile(r'''(Replace\("\""|Replace\("\'").{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_request_object', compile(r'''\WRequest\..{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_response_object', compile(r'''\WResponse\..{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_route', compile(r'''\.MapRoute\(.{0,299}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_skip_auth', compile(r'''SkipAuthorization.{0,100}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_skip_ssl_validation', compile(r'''ServerCertificateCustomValidationCallback.{0,299}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_sqlClient', compile(r'''\W(SqlClient|SqlCommand).{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_sqlCmd', compile(r'''\W(ExecuteSqlCommand|ExecuteSqlCommandAsync|SqlQuery).{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_sqlConnection', compile(r'''\WSqlConnection.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_sqlclient', compile(r'''\W(SqlClient|SqlCommand).{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_sqlcommand', compile(r'''\W(ExecuteSqlCommand|ExecuteSqlCommandAsync|SqlQuery).{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_sqli_and', compile(r'''".{0,99}\Wand\W.{0,99}".{0,99}\+.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_sqli_doubleupquote', compile(r'''Replace.{0,99}\'.{0,99}\'\'.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_sqli_interpolation', compile(r'''=\s*{.{0,200}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_sqli_select_brace', compile(r'''"select.{0,199}\{.{0,199}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_sqli_simpleDB', compile(r'''\sSimpleDB\..{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_tripledes', compile(r'''TripleDESCryptoServiceProvider.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_unsafe', compile(r'''\sunsafe\s.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_validateinput_false', compile(r'''\[ValidateInput.{1,20}false.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_weak_ecb_mode', compile(r'''CipherMode\.ECB.{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_web_dotnet_weak_hash', compile(r'''(RIPEMD160|SHA1|MD5|MD2|MD4).{0,99}(.{0,99}){0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_webmethod', compile(r'''\[(WebMethod|WebService|ScriptMethod|ScriptService).{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('dotnet_writefile', compile(r'''\WWriteFile\W.{0,199}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('endpoints', compile(r'''/endpoints/.{0,99}$''')),
    ('export_creds', compile(r'''^(.{0,10})export .{0,99}(LOGIN|USER|KEY|SECRET|BUCKET|TOKEN|CREDS|CREDENTIAL|PASS|AUTH).{0,99}=[^$]{6,199}$''')),
    ('fileSystem_call', compile(r'''FileSystem\W.{0,99}$''')),
    ('file_Stream', compile(r'''FileStream.{0,99}$''')),
    ('file_copy', compile(r'''\WFile\.Copy\(.{0,99}$''')),
    ('file_copyFile', compile(r'''copyFile\(.{0,99}$''')),
    ('file_dot', compile(r'''File\..{0,99}$''')),
    ('file_get_contents', compile(r'''file_get_contents.{0,99}$''')),
    ('go_exec', compile(r'''\Wexec\..{0,99}$'''), GO_FILES, GO_EXCLUSIONS),
    ('go_exec_cmdi', compile(r'''\Wexec\..{0,99}(/c|-c).{0,99}$'''), GO_FILES, GO_EXCLUSIONS),
    ('go_http_client', compile(r'''\Whttp\.(Client|Get|Post|PostForm|NewRequest)\W.{0,99}$'''), GO_FILES),
    ('go_http_cookie', compile(r'''\Whttp\.(Cookie|SetCookie)\W.{0,99}$'''), GO_FILES),
    ('go_http_header', compile(r'''\Whttp\.Header\W.{0,99}$'''), GO_FILES),
    ('go_http_server', compile(r'''\Whttp\.(ListenAndServe|Handle|HandleFunc|Server)\W.{0,99}$'''), GO_FILES),
    ('go_http_server_plaintext_only', compile(r'''\Whttp\.ListenAndServe\(\W.{0,99}$'''), GO_FILES),
    ('go_os', compile(r'''\Wos\..{0,99}$'''), GO_FILES, GO_EXCLUSIONS),
    ('go_reflect', compile(r'''\Wreflect\..{0,99}$'''), GO_FILES, [compile(r'''(DeepEqual|ValueOf)'''), ]),
    ('go_sprintf_s', compile(r'''Sprintf\s*\(.*\"[^\"]*%s.{0,99}$'''), GO_FILES),
    ('go_sqli_select', compile(r'''\.Select\(.{0,99}$'''), GO_FILES),
    ('go_sqli_sqlmodule', compile(r'''"database/sql"'''), GO_FILES),
    ('go_ssh_ignore_host_key', compile(r'''\WInsecureIgnoreHostKey.{0,99}$'''), GO_FILES, GO_EXCLUSIONS),
    ('go_unsafe', compile(r'''\Wunsafe\W.{0,99}$'''), GO_FILES),
    ('go_world_fileperms', compile(r'''(Mkdir|WriteFile|Chmod|OpenFile|FileMode|\Wos\.)\W0[0-7][0-7][1-7]\W.{0,99}$'''), GO_FILES),
    ('go_world_write', compile(r'''(Mkdir|WriteFile|Chmod|OpenFile|FileMode|\Wos\.)\W0[0-7][0-7](1|2|3|5|6|7)\W.{0,99}$'''), GO_FILES),
    ('go_xss_writestring', compile(r'''io\.WriteString\W.{0,99}$'''), GO_FILES),
    ('http_user_agent', compile(r'''HTTP_USER_AGENT.{0,99}$''')),
    ('http_x_forwarded_for', compile(r'''HTTP_X_FORWARDED_FOR.{0,99}$''')),
    ('insecure_url', compile(r'''http://([a-zA-Z0-9]+\.)+[a-zA-Z0-9]+.{0,200}$'''), None, [compile(r'''^\s*(\*+|//|/*|#|;)\s+'''), compile(r'''(readme|\.md|xlmns|doctype)''')]),  # noqa
    ('insecure_url2', compile(r'''^.{0,200}http://.{0,200}$'''), None, [compile(r'''^\s*(\*+|//|/*|#|;)\s+'''), compile(r'''(readme|\.md|\|xlmns|doctype)''')]),  # noqa
    ('intercept_url', compile(r'''intercept-url{0,200}$''')),
    ('java_deserialisation', compile(r'''\.readObject\(.{0,99}$'''), JAVA_FILES),
    ('java_spring_expression_lang_injection', compile(r'''(<spring:message|<spring:eval).{0,99}\$\{.{0,99}$'''), JAVA_FILES),
    ('java_sqli', compile(r'''\.(executeQuery|executequery|executeUpdate).{0,99}$'''), JAVA_FILES),
    ('js_var_include', compile(r'''^\s*require\([^'"\n]{0,99}$'''), JS_FILES),
    ('memoryMappedFile', compile(r'''MemoryMappedFile.{0,99}$''')),
    ('ml_fasttext_py', compile(r'''import\s+fasttext.{0,99}$''')),
    ('ml_load_model', compile(r'''\.load_model\(.{0,99}$''')),
    ('ml_numpy', compile(r'''import\s+numpy.{0,99}$''')),
    ('ml_pytorch', compile(r'''import\s+torch.{0,99}$''')),
    ('ml_tensorflow_model_server', compile(r'''tensorflow_model_server.{0,99}$''')),
    ('ml_torch_load', compile(r'''torch\.load.{0,99}$''')),
    ('ml_torchvision', compile(r'''import\s+torchvision.{0,99}$''')),
    ('mongodb_url', compile(r'''mongodb://.{0,200}$''')),
    ('netsh', compile(r'''^.{0,200}\bnetsh\b.{0,200}$''')),
    ('new_file', compile(r'''new\sFile\(.{0,99}$''')),
    ('nkt_hook_lib', compile(r'''(NktHookLib|NKTHOOKLIB).{0,199}$'''), C_FILES),
    ('obfuscation', compile(r'''obfusc.{0,200}$''')),
    ('paths', compile(r'''^[^$"\n]*"[^$"\n]*/[^$"\n]*".{0,99}$''')),
    ('php_bad_rand', compile(r'''\W(mt_rand|mt_srand|lcg_value|rand|uniqid|microtime|shuffle)\W.{0,99}$'''), PHP_FILES),
    ('php_cmdi_popen_var', compile(r'''\Wpopen.*\(.*\$.*\).{0,99}$'''), PHP_FILES),
    ('php_cookie', compile(r'''\$_COOKIE.{0,99}$'''), PHP_FILES),
    ('php_cookie_param_in_string', compile(r'''\.\s+\$_COOKIE.{0,99}$'''), PHP_FILES),
    ('php_create_function', compile(r'''create_function.{0,99}$'''), PHP_FILES),
    ('php_escapeshellarg', compile(r'''escapeshellarg\s*\(.{0,200}$'''), PHP_FILES),
    ('php_exec', compile(r'''\Wexec\s*\(.{0,200}$'''), PHP_FILES),
    ('php_filegetcontents', compile(r'''file_get_contents\s*\(.{0,200}$'''), PHP_FILES),
    ('php_filter_input', compile(r'''filter_input.{0,99}$'''), PHP_FILES),
    ('php_get', compile(r'''\$_GET.{0,99}$'''), PHP_FILES),
    ('php_get_param_in_string', compile(r'''\.\s+\$_GET.{0,99}$'''), PHP_FILES),
    ('php_good_rand', compile(r'''\W(openssl_random_pseudo_bytes|random_int|random_bytes)\W.{0,99}$'''), PHP_FILES),
    ('php_order_by', compile(r'''order\s+by.{0,200}\'.{0,200}\$.{0,200}$'''), PHP_FILES),
    ('php_parse_str_no_param', compile(r'''parse_str\s*\([^\n,]{0,200}$'''), PHP_FILES),
    ('php_popen', compile(r'''\Wpopen\s*\(.{0,200}$'''), PHP_FILES),
    ('php_post', compile(r'''\$_POST.{0,99}$'''), PHP_FILES),
    ('php_post_param_in_string', compile(r'''\.\s+\$_POST.{0,99}$'''), PHP_FILES),
    ('php_proc_open', compile(r'''proc_open\s*\(.{0,200}$'''), PHP_FILES),
    ('php_rce_assert', compile(r'''assert\(\s*"?\$\w*"?\s*\).{0,99}$'''), PHP_FILES),
    ('php_rce_eval', compile(r'''\Weval\(\s*"?\$\w*"?\s*\).{0,99}$'''), PHP_FILES),
    ('php_request', compile(r'''\$_REQUEST.{0,99}$'''), PHP_FILES),
    ('php_request_param_in_string', compile(r'''\.\s+\$_REQUEST.{0,99}$'''), PHP_FILES),
    ('php_shell_exec', compile(r'''shell_exec\s*\(.{0,200}$'''), PHP_FILES),
    ('php_sqli_codeigniter_disable_escape', compile(r'''_protect_identifiers.*FALSE.{0,99}$'''), PHP_FILES),
    ('php_sqli_codeigniter_select_disable_escape', compile(r'''select\(.*FALSE.{0,99}$'''), PHP_FILES),
    ('php_sqli_in', compile(r'''^[^\n]{0,99}\$\w+[^\n]{0,99}\s+(AND|OR)\s+[^\n]{0,99}\sIN\s*\([^\n]{0,99}\.[^\n]{0,99}\$\w+[^\n]{0,99}\)[^\n]{0,99}$''')),
    ('php_ssl_disable_curl', compile(r'''CURLOPT_SSL_VERIFYHOST\s*[=>,]*\s+(false|0).{0,99}$'''), PHP_FILES),
    ('php_strcmp_array_bypass', compile(r'''strcmp.*==.{0,200}$'''), PHP_FILES),
    ('php_var_func', compile(r'''\$\w+\(.{0,99}$'''), PHP_FILES),
    ('php_var_include', compile(r'''(include|require).{0,99}\$.{0,99}$'''), PHP_FILES),
    ('php_xss_tag', compile(r'''<\w+>.*\$\w+.{0,200}$'''), PHP_FILES),
    ('plaintext_port', compile(r'''\.createInsecure\(.{0,99}$''')),
    ('priv_chmod', compile(r'''chmod\(.{0,199}$''')),
    ('priv_chown', compile(r'''chown\(.{0,199}$''')),
    ('py_check_output', compile(r'''check_output\(.{0,99}$'''), PY_FILES),
    ('py_deserialisation', compile(r'''pickle\.loads\(.{0,99}$'''), PY_FILES),
    ('py_deserialisation2', compile(r'''pickle\.load\(.{0,99}$'''), PY_FILES),
    ('py_filesystem', compile(r'''require\(\'fs\'\).{0,99}$'''), PY_FILES),
    ('py_flask_debug_mode', compile(r'''^.{0,200}app\.run.{0,100}debug\s*=\s*True.{0,200}$'''), PY_FILES),
    ('py_flask_autoescape', compile(r'''^.{0,200}autoescape\s+false.{0,200}$'''), PY_FILES + HTM_FILES),
    ('py_flask_pipe_safe', compile(r'''^.{0,200}\|\s*safe.{0,200}$'''), PY_FILES + HTM_FILES),
    ('py_flask_markup', compile(r'''^.{0,200}\WMarkup\(.{0,200}$'''), PY_FILES),
    ('py_mktemp_banned', compile(r'''^.{0,200}\Wmktemp\s*\(.{0,200}$'''), PY_FILES),
    ('py_shell_is_true', compile(r'''shell\s*=\s*True.{0,99}$'''), PY_FILES),
    ('py_subprocess_call', compile(r'''subprocess.call\(.{0,99}$'''), PY_FILES),
    ('py_subprocess_run', compile(r'''subprocess.run\(.{0,99}$'''), PY_FILES),
    ('python_deserial', compile(r'''\.loads\(.{0,99}$'''), PY_FILES),
    ('python_format_cmdi', compile(r'''"[^"]*-[^"]\{[^"]*"\.format.{0,99}$'''), PY_FILES),
    ('rand_math_random', compile(r'''\WMath\.random\(\W.{0,99}$''')),
    ('rand_net_random', compile(r'''\W(System\.Random).{0,99}$''')),
    ('rand_new_random', compile(r'''\Wnew\sRandom\(\W.{0,99}$''')),
    ('rand_rand', compile(r'''\Wrand\s*\(\W.{0,99}$''')),
    ('rand_random', compile(r'''\Wrandom\s*\(\W.{0,99}$''')),
    ('rand_time', compile(r'''\W(ftime|gettimeofday|GetTickCount|GetTickCount64|QueryPerformanceCounter|GetSystemTime|GetLocalTime|GetSystemTimeAsFileTime|NtQuerySystemTime|time|uniqid|microtime)\(.{0,99}$''')),
    ('rand_util_random', compile(r'''\Wutil\.Random\W.{0,99}$'''), JAVA_FILES),
    ('rand_windows_good', compile(r'''\W(CryptGenRandom)\W.{0,99}$''')),
    ('rds_hosts', compile(r'''\S{10,199}\.rds\.amazonaws\.com''')),
    ('rootpwd', compile(r'''[\s"\'^\(\{\[]root/[a-zA-Z0-9\.\-\_\!\?\#\&\*\:\;\@\(\)\<\>\%]{12,}''')),
    ('routing_controller', compile(r'''@Controller.{0,200}$''')),
    ('routing_decorator', compile(r'''\[Route\(.{0,99}$''')),
    ('routing_decorator2', compile(r'''\[RoutePrefix\(.{0,99}$''')),
    ('routing_flask', compile(r'''\badd_resource\b'''), PY_FILES),
    ('routing_get', compile(r'''Get\[.{0,99}$''')),
    ('routing_java_get', compile(r'''@GET.{0,99}$'''), JAVA_FILES),
    ('routing_java_getmapping', compile(r'''@GetMapping.{0,99}$'''), JAVA_FILES),
    ('routing_java_path', compile(r'''@Path\(.{0,99}$'''), JAVA_FILES),
    ('routing_java_post', compile(r'''@POST.{0,99}$'''), JAVA_FILES),
    ('routing_java_requestmapping', compile(r'''@RequestMapping.{0,99}$'''), JAVA_FILES),
    ('routing_java_requestmethod', compile(r'''RequestMethod\.[A-Z]+.{0,99}$'''), JAVA_FILES),
    ('routing_node_get', compile(r'''^.{0,99}\.get\(.{0,99}$'''), JS_FILES),
    ('routing_node_post', compile(r'''^.{0,99}\.post\(.{0,99}$'''), JS_FILES),
    ('routing_node_put', compile(r'''^.{0,99}\.put\(.{0,99}$'''), JS_FILES),
    ('routing_python', compile(r'''\.add_resource\W.{0,200}$'''), PY_FILES),
    ('routing_web', compile(r'''\.route\(.{0,199}$''')),
    ('rpc_reg', compile(r'''RpcServerRegisterIf.{0,199}$'''), C_FILES),
    ('ruby_bad_hash', compile(r'''(Digest::MD5|Digest::SHA1)'''), RUBY_FILES),
    ('ruby_cmdi_backtick', compile(r'''^[^"\n]*`[^`\n]*#\{[^`\n]+`'''), RUBY_FILES),
    ('ruby_cmdi_backtick', compile(r'''^[^"\n]*`[^`\n]+`'''), RUBY_FILES),
    ('ruby_cmdi_backtick2', compile(r'''`#\{'''), RUBY_FILES),
    ('ruby_cmdi_exec', compile(r'''\Wexec\W'''), RUBY_FILES),
    ('ruby_cmdi_percent_x', compile(r'''%x[\(\{]'''), RUBY_FILES),
    ('ruby_cmdi_percent_x', compile(r'''%x[\(\{].*#\{'''), RUBY_FILES),
    ('ruby_cmdi_popen', compile(r'''IO\.popen'''), RUBY_FILES),
    ('ruby_cmdi_popen', compile(r'''IO\.popen.*#\{'''), RUBY_FILES),
    ('ruby_cmdi_popen2', compile(r'''\Wpopen.{0,200}'''), RUBY_FILES),
    ('ruby_cmdi_spawn', compile(r'''Process\.spawn'''), RUBY_FILES),
    ('ruby_cmdi_spawn', compile(r'''Process\.spawn.*#\{'''), RUBY_FILES),
    ('ruby_cmdi_system', compile(r'''\Wsystem\W.*#\{'''), RUBY_FILES),
    ('ruby_custom_header', compile(r'''request\.headers\['''), RUBY_FILES),
    ('ruby_env', compile(r'''\WENV\[".*"\]'''), RUBY_FILES),
    ('ruby_json_load_RCE', compile(r'''JSON\.load'''), RUBY_FILES),
    ('ruby_rails_version', compile(r'''^\s*rails\s*\([0-9\.]+\)'''), 'Gemfile.lock'),
    ('ruby_req_header', compile(r'''\.headers\["[a-zA-Z0-9-]"\]'''), RUBY_FILES),
    ('ruby_route_delete', compile(r'''\Wdelete\s'''), RUBY_FILES),
    ('ruby_route_get', compile(r'''\Wget\s'''), RUBY_FILES),
    ('ruby_route_match', compile(r'''\Wmatch\s'''), RUBY_FILES),
    ('ruby_route_post', compile(r'''\Wpost\s'''), RUBY_FILES),
    ('ruby_route_put', compile(r'''\Wput\s'''), RUBY_FILES),
    ('ruby_sqli_from', compile(r'''\Wfrom\(.*#'''), RUBY_FILES),
    ('ruby_sqli_order', compile(r'''\Worder\(.*#'''), RUBY_FILES),
    ('ruby_sqli_where', compile(r'''\Wwhere\(.*#'''), RUBY_FILES),
    ('ruby_sqli_where_interp', compile(r'''\.where.*#{'''), RUBY_FILES),
    ('ruby_string_interpolation', compile(r'''"[^"#]*#\{'''), RUBY_FILES),
    ('ruby_url_string_interpolation', compile(r'''https?://.*#\{.{0,99}$'''), RUBY_FILES),
    ('ruby_yaml_load_file', compile(r'''\.load_file\W.{0,99}$'''), RUBY_FILES),
    ('secure_url', compile(r'''https://([a-zA-Z0-9]+\.)+[a-zA-Z0-9]+.{0,200}$''')),
    ('segv_reference', compile(r'''\W(segvs|segv|sigsegv)\W.{0,200}$''')),
    ('simpleDB', compile(r'''SimpleDB.{0,99}$''')),
    ('sqli_brace_interpolation', compile(r'''("|\')\s*(SELECT|INSERT|UPDATE|DELETE|CREATE|ALTER|DROP|TRUNCATE|USE)\s.*\{\d+\}.*("|\').{0,99}$''')),
    ('sqli_c', compile(r'''"select\s.{1,200}%s.{0,99}$'''), C_FILES),
    ('sqli_compileSelectWhere', compile(r'''CompileSelectWhere.{0,99}$''')),
    ('sqli_createSQLQuery', compile(r'''createSQLQuery.{0,99}$''')),
    ('sqli_dblink', compile(r'''dblink.{0,99}$''')),
    ('sqli_dbms_sql_exec', compile(r'''dbms_sql.execute.{0,99}$''')),
    ('sqli_deprecated_escape', compile(r'''PQescapeString\(.{0,99}$''')),
    ('sqli_deprecated_escape2', compile(r'''mysql_escape_string\(.{0,99}$''')),
    ('sqli_dollar_interpolation', compile(r'''("|\')\s*(SELECT|INSERT|UPDATE|DELETE|CREATE|ALTER|DROP|TRUNCATE|USE)\s.*\$.*("|\').{0,99}$''')),
    ('sqli_dotnet_interpolation2', compile(r'''\Wselect\s+[a-zA-z0-9\.,\*]+\s+from.{1,80}{\d+}.{0,99}$'''), DOTNET_FILES),
    ('sqli_exec_sp', compile(r'''ExecuteStoredProcedure\(.{0,99}$''')),
    ('sqli_import_java_sql', compile(r'''import\s+java.sql.{0,99}$''')),
    ('sqli_in_joined_strings', compile(r'''\<in\>.{0,199}strings\.Join\(.{0,199}''')),
    ('sqli_insert', compile(r'''\Winsert\s+into\s+[a-zA-z0-9\.,\*].{0,99}$''')),
    ('sqli_interpolate_brace', compile(r'''^.{0,199}\'\{\s*\d+\s*\}\'.{0,199}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('sqli_java_concat', compile(r'''"[\s\(]*\b(select|insert|update|delete)\b.{0,199}"\s*\+\s*\w+.{0,99}$'''), JAVA_FILES),
    ('sqli_java_sqli_append', compile(r'''sql\.append\(.{0,99}$''')),
    ('sqli_joined_strings_sgl', compile(r'''strings\.Join\(.{0,199}\'.{0,199}$''')),
    ('sqli_like', compile(r'''LIKE.*(%'|'%).{0,99}$''')),
    ('sqli_oracle_execute_immediate', compile(r'''\Wexecute\s+immediate\W.{0,99}$''')),
    ('sqli_orcl_dbms_sql_parse', compile(r'''dbms_sql.parse.{0,99}$''')),
    ('sqli_orcl_exec_immediate', compile(r'''EXECUTE\s+IMMEDIATE.{0,99}$''')),
    ('sqli_order_by', compile(r'''order\sby.{0,99}$''')),
    ('sqli_partial_view', compile(r'''\WPartialView\(.{0,99}$''')),
    ('sqli_percent_interpolation', compile(r'''("|\')\s*(SELECT|INSERT|UPDATE|DELETE|CREATE|ALTER|DROP|TRUNCATE|USE)\s.*\%.*("|\').{0,99}$''')),
    ('sqli_py_interp', compile(r'''\.execute\(\s*".{0,99}\%s.{0,99}$'''), PY_FILES),
    ('sqli_queryBuilder', compile(r'''queryBuilder.{0,99}$''')),
    ('sqli_queryRaw', compile(r'''queryRaw\(.{0,99}$''')),
    ('sqli_select_from', compile(r'''\Wselect\W.{0,99}\Wfrom\W.{0,99}$''')),
    ('sqli_simpleDBSelect', compile(r'''\.SelectRequest.{0,99}$''')),
    ('sqli_sp_executesql', compile(r'''\Wsp_executesql\W.{0,99}$''')),
    ('sqli_sp_xp', compile(r'''\W(exec\ssp_|exec\sxp_).{0,99}$''')),
    ('sqli_sqlHelper', compile(r'''sqlHelper.runQuery.{0,99}$''')),
    ('sqli_sql_apis', compile(r'''\W(OleDbConnection|ADODB\.|System\.Data\.Sql|\.ResultSet).{0,99}$'''), DOTNET_FILES, CS_EXCLUSIONS),
    ('sqli_sql_execute', compile(r'''\WEXECUTE\W.{0,99}$''')),
    ('sqli_where', compile(r'''\s+WHERE\s+[^\n]*\$\w+.{0,99}$''')),
    ('ssh_disable_hostkey_check', compile(r'''StrictHostKeyChecking=no.{0,99}$''')),
    ('ssl_disable_curl', compile(r'''curl.{0,99}\s-k\W.{0,99}$''')),
    ('ssl_disable_java', compile(r'''InsecureRequestWarning.{0,99}$''')),
    ('ssl_disable_mysql', compile(r'''--skip-ssl.{0,99}$''')),
    ('ssl_disable_python', compile(r'''checkServerTrusted.{0,99}$''')),
    ('ssl_disable_python2', compile(r'''no-check-cert.{0,99}$''')),
    ('ssl_disable_python3', compile(r'''verify\s*=\s*False.{0,99}$''')),
    ('ssl_disable_python4', compile(r'''rejectUnauthorized.{99}[Ff]alse.{0,99}$''')),
    ('ssl_disable_wget', compile(r'''wget.{0,200}--no-check-certificate.{0,200}$''')),
    ('str_dot_net', compile(r'''\.Format.{1,80}\s-.{1,80}{\d+}.{0,99}$''')),
    ('str_dot_net2', compile(r'''\.Format.{1,80}\{\d+\}.{1,80}\s-.{1,80}.{0,99}$''')),
    ('str_interp_brace', compile(r'''\$\".{0,99}{.{0,99}\".{0,99}$''')),
    ('str_interp_dollar', compile(r'''\".{0,99}\$.{0,99}\".{0,99}$''')),
    ('str_join', compile(r'''string\.Join\(.{0,199}$''')),
    ('str_mixed_quote_dbl_sgl', compile(r'''^.{0,99}\"\'.{0,99}$''')),
    ('str_mixed_quote_sgl_dbl', compile(r'''^.{0,99}\'\".{0,99}$''')),
    ('str_plus', compile(r'''\'\s*\+.{0,99}\+\s*\'.{0,99}$''')),
    ('str_scala_mkString', compile(r'''\.mkString\(.{0,99}$''')),
    ('todo_authenticate', compile(r'''TODO.*authenticate.{0,200}$''')),
    ('todo_encrypt', compile(r'''TODO.*encrypt.{0,200}$''')),
    ('todo_login', compile(r'''TODO.*login.{0,200}$''')),
    ('todo_password', compile(r'''TODO.*password.{0,200}$''')),
    ('todo_password2', compile(r'''password.*TODO.{0,200}$''')),
    ('trusted_plaintext_docker_repo', compile(r'''trusted\s*=\s*yes.*http://.{0,99}$''')),  # noqa
    ('uniq_ip_addresses', compile(r'''[\'"]([1-2]?[0-9]?[0-9]\.){3}([1-2]?[0-9]?[0-9])[\'"]''')),
    ('unreal_fs', compile(r'''FFileHelper::''')),
    ('unreal_mem', compile(r'''FMemory::''')),
    ('unreal_module', compile(r'''FModuleManager::''')),
    ('unreal_paths', compile(r'''FPaths::''')),
    ('url_numeric', compile(r'''^[^#]*http(s)?://\d+\.\d+\.\d+\.\d+.{0,200}$'''), None, [compile('127.0.0.1')]),
    ('url_pattern', compile(r'''url-pattern{0,200}$''')),
    ('useradd', compile(r'''useradd.{0,200}$''')),
    ('username_email', compile(r'''[^/]userName:\s*[\.a-zA-Z0-9\_\-]+@[\.a-zA-Z0-9\_\-]+(\.[\.a-zA-Z0-9\_\-]+)+[^\n]{0,200}$''')),
    ('ver_aws_sdk', compile(r'''AWS_SDK_VERSION_STRING.{0,99}$''')),
    ('ver_bzip', compile(r'''BZ_VERSION.{0,99}$''')),
    ('ver_jansson', compile(r'''JANSSON_VERSION.{0,99}$''')),
    ('ver_jsoncpp', compile(r'''AWS_JSONCPP_VERSION_STRING.{0,99}$''')),
    ('ver_libcurl', compile(r'''LIBCURL_VERSION.{0,99}$''')),
    ('ver_libcurl_str', compile(r'''#define LIBCURL_VERSION "[^"]+"''')),
    ('ver_libpng', compile(r'''PNG_LIBPNG_VER_STRING.{0,99}$''')),
    ('ver_mariadb', compile(r'''MARIADB_PACKAGE_VERSION.{0,99}$''')),
    ('ver_mdb', compile(r'''(MDB_VERSION_MAJOR|MDB_VERSION_MINOR|MDB_VERSION_PATCH).{0,99}$''')),
    ('ver_mongoose', compile(r'''MONGOOSE_VERSION.{0,99}$''')),
    ('ver_openssl', compile(r'''OPENSSL_VERSION_TEXT.{0,99}$''')),
    ('ver_postgres', compile(r'''(PG_MAJORVERSION|PG_VERSION|PG_VERSION_STR).{0,99}$''')),
    ('ver_sqlite', compile(r'''SQLITE_VERSION.{0,99}$''')),
    ('ver_u_icu', compile(r'''U_ICU_VERSION.{0,99}$''')),
    ('ver_zlib', compile(r'''ZLIB_VERSION.{0,99}$''')),
    ('web_HttpServletRequest', compile(r'''HttpServletRequest.{0,99}$''')),
    ('web_dotnet', compile(r'''HttpResponseMessage.{0,99}$''')),
    ('web_input', compile(r'''\W(FileInputStream|FilterInputStream|SequenceInputStream|StringBufferInputStream|ByteArrayInputStream|FileOutputStream).{0,99}$''')),
    ('web_java_custom_header', compile(r'''\.getHeader\(.{0,99}$''')),
    ('web_net_events', compile(r'''\W(Application_OnAuthenticateRequest|Application_OnAuthorizeRequest|Session_OnStart).{0,99}$''')),
    ('web_path', compile(r'''\W(getRealPath).{0,99}$''')),
    ('web_remote_name', compile(r'''\W(getRemoteAddr|getRemoteHost).{0,99}$''')),
    ('web_request_dot', compile(r'''\WRequest\..{0,99}$''')),
    ('web_sec_override', compile(r'''\W(RequestMinimum|RequestOptional|SkipVerification|UnmanagedCode).{0,99}$''')),
    ('win_filter_drv_reg', compile(r'''FltCreateCommunicationPort.{0,199}$''')),
    ('win_reg_api', compile(r'''(OpenSubKey|RegOpenKey|RegQueryInfoKey|RegQueryValue|RegSetValue).{0,99}$''')),
    ('win_reg_key', compile(r'''(HKEY_LOCAL_MACHINE|HKEY_CURRENT_USER|HKEY_CLASSES_ROOT|HKEY_USERS|HKEY_CURRENT_CONFIG).{0,99}$''')),
    ('workzeug_debugger_active', compile(r'''WERKZEUG_DEBUG_PIN.{0,200}$''')),
]

BannedFunctions = ['_alloca', '_ftcscat', '_ftcscpy', '_getts', '_gettws', '_i64toa', '_i64tow', '_itoa', '_itow', '_makepath', '_mbccat',
                   '_mbccpy', '_mbscat', '_mbscpy', '_mbslen', '_mbsnbcat', '_mbsnbcpy', '_mbsncat', '_mbsncpy', '_mbstok', '_mbstrlen',
                   '_sntscanf', '_splitpath', '_stprintf', '_stscanf', '_tccat', '_tccpy', '_tcscat', '_tcscpy', '_tcsncat', '_tcsncpy',
                   '_tcstok', '_tmakepath', '_tscanf', '_tsplitpath', '_ui64toa', '_ui64tot', '_ui64tow', '_ultoa', '_ultot', '_ultow',
                   '_vstprintf', '_wmakepath', '_wsplitpath', 'alloca', 'ChangeWindowMessageFilter', 'CharToOem', 'CharToOemA',
                   'CharToOemBuffA', 'CharToOemBuffW', 'CharToOemW', 'CopyMemory', 'gets', 'IsBadCodePtr', 'IsBadHugeReadPtr',
                   'IsBadHugeWritePtr', 'IsBadReadPtr', 'IsBadStringPtr', 'IsBadWritePtr', 'lstrcat', 'lstrcatA', 'lstrcatn', 'lstrcatnA',
                   'lstrcatnW', 'lstrcatW', 'lstrcpy', 'lstrcpyA', 'lstrcpyn', 'lstrcpynA', 'lstrcpynW', 'lstrcpyW', 'lstrlen', 'lstrncat',
                   'makepath', 'memcpy', 'memcpy', 'OemToChar', 'OemToCharA', 'OemToCharW', 'RtlCopyMemory', 'scanf', 'snscanf', 'snwscanf',
                   'sprintf', 'sprintfA', 'sscanf', 'strcat', 'strcat', 'StrCat', 'strcatA', 'StrCatA', 'StrCatBuff', 'StrCatBuffA',
                   'StrCatBuffW', 'StrCatChainW', 'StrCatN', 'StrCatNA', 'StrCatNW', 'strcatW', 'StrCatW', 'strcpy', 'StrCpy', 'strcpyA',
                   'StrCpyA', 'StrCpyN', 'StrCpyNA', 'strcpynA', 'StrCpyNW', 'strcpyW', 'StrCpyW', 'strlen', 'StrLen', 'strncat', 'StrNCat',
                   'StrNCatA', 'StrNCatW', 'strncpy', 'StrNCpy', 'StrNCpyA', 'StrNCpyW', 'strtok', 'swprintf', 'swscanf', 'vsnprintf',
                   'vsprintf', 'vswprintf', 'wcscat', 'wcscpy', 'wcslen', 'wcsncat', 'wcsncpy', 'wcstok', 'wmemcpy', 'wnsprintf',
                   'wnsprintfA', 'wnsprintfW', 'wscanf', 'wsprintf', 'wsprintf', 'wsprintfA', 'wvnsprintf', 'wvnsprintfA', 'wvnsprintfW',
                   'wvsprintf', 'wvsprintfA', 'wvsprintfW']


def signal_handler(sig, frame):  # noqa
    print('Exiting (CTRL-C)')
    sys.exit(0)


def main():
    signal.signal(signal.SIGINT, signal_handler)
    fn.do_main()


if __name__ == "__main__":
    main()
